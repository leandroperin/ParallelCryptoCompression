@book{Tanenbaum2015,
author = {Tanenbaum, Andrew S. and Bos, Herbert},
edition = {Fourth},
isbn = {978-0-13-359162-0},
pages = {1137},
publisher = {Pearson},
title = {{Modern Operating Systems}},
year = {2015}
}

@book{Hwang1998,
author = {Hwang, K. and Xu, Z.},
edition = {First},
isbn = {978-0070317987},
pages = {832},
publisher = {McGraw-Hill Science/Engineering/Math},
title = {Scalable Parallel Computing: Technology, Architecture, Programming},
year = {1998}
}

@book{Chapman2008,
author = {Chapman, B. and Jost, G. and Pas, R.},
isbn = {978-0262533027},
pages = {353},
publisher = {MIT Press},
title = {Using OpenMP: Portable Shared Memory Parallel Programming},
year = {2008}
}

@book{Chandra2000,
author = {Chandra, R. and Dagum, L. and Kohr, D. and Maydan, D. and McDonald, J. and Menon, R.},
isbn = {978-1558606715},
pages = {231},
publisher = {Morgan Kaufmann},
title = {Parallel Programming in OpenMP},
year = {2000}
}

@book{Gropp1999,
author = {Gropp, W. and Lusk, E. and Skjellum, A.},
isbn = {978-0262571326},
pages = {371},
publisher = {MIT Press},
title = {Using MPI: Portable Parallel Programming with the Message-passing Interface},
year = {1999}
}

@book{Sanders2010,
author = {Sanders, J. and Kandrot, E.},
isbn = {978-0132180139},
pages = {312},
publisher = {Addison-Wesley Professional},
title = {CUDA by Example: An Introduction to General-Purpose GPU Programming},
year = {2010}
}

@book{Stallings2014,
author = {Stallings, W.},
isbn = {978-0133354690},
pages = {731},
publisher = {Pearson},
title = {Cryptography and Network Security: Principles and Practice},
year = {2014}
}

@book{Pfleeger2015,
author = {Pfleeger, C. P. and Pfleeger, S. L. and Margulies, J.},
isbn = {978-0134085043},
pages = {910},
publisher = {Prentice Hall},
title = {Security in Computing},
year = {2015}
}

@book{Salomon2007,
author = {Salomon, D.},
isbn = {978-1846286032},
pages = {1092},
publisher = {Springer Science & Business Media},
title = {Data Compression: The Complete Reference},
year = {2007}
}

@article{Miranda2010,
author = {Miranda, C. S.},
title = {A evolução da GPGPU: arquitetura e programação},
year = {2010},
pages = {1--7},
url = {http://www.ic.unicamp.br/~ducatte/mo401/1s2010/T2/070498-t2.pdf},
abstract = {Este artigo faz um estudo da evolu ̧c ̃ao das GPUs utiliza-
das para prop ́osito geral. Elas possuem grande aplica ̧c ̃ao
em, mas n ̃ao limitadas a, programas cient ́ıficos. V ́arias
mudan ̧cas na arquitetura e programa ̧c ̃ao ocorreram du-
rante os anos para satisfazer essa necessidade, mas sem
distanciar da capacidade de gera ̧c ̃ao de gr ́aficos, que aind
a
 ́e sua principal importˆancia. Ser ̃ao apresentadas a hist ́
oria
da evolu ̧c ̃ao destes dispositivos tanto do lado do projetis
ta
quanto do usu ́ario.}
}

@article{Flynn1972,
volume = {21},
number = {9},
month = {September},
author = {Flynn, M. J.},
title = {Some Computer Organizations and Their Effectiveness},
year = {1972},
pages = {948--960},
publisher = {IEEE},
journal = {IEEE Transactions on Computers},
url = {http://ieeexplore.ieee.org/document/5009071/},
abstract = {A hierarchical model of computer organizations is developed, based on a tree model using request/service type resources as nodes. Two aspects of the model are distinguished: logical and physical. General parallel- or multiple-stream organizations are examined as to type and effectiveness-especially regarding intrinsic logical difficulties. The overlapped simplex processor (SISD) is limited by data dependencies. Branching has a particularly degenerative effect. The parallel processors [single-instruction stream-multiple-data stream (SIMD)] are analyzed. In particular, a nesting type explanation is offered for Minsky's conjecture-the performance of a parallel processor increases as log M instead of M (the number of data stream processors). Multiprocessors (MIMD) are subjected to a saturation syndrome based on general communications lockout. Simplified queuing models indicate that saturation develops when the fraction of task time spent locked out (L/E) approaches 1/n, where n is the number of processors. Resources sharing in multiprocessors can be used to avoid several other classic organizational problems.}
}

@article{ahmed1974,
volume = {23},
number = {1},
month = {January},
author = {Ahmed, N. and Natarajan, T. and Rao, K. R.},
title = {Discrete Cosine Transform},
publisher = {IEEE},
year = {1974},
journal = {IEEE Transactions on Computers},
pages = {90--93},
url = {http://ieeexplore.ieee.org/document/1672377/},
abstract = {A discrete cosine transform (DCT) is defined and an algorithm to compute it using the fast Fourier transform is developed. It is shown that the discrete cosine transform can be used in the area of digital processing for the purposes of pattern recognition and Wiener filtering. Its performance is compared with that of a class of orthogonal transforms and is found to compare closely to that of the Karhunen-Loève transform, which is known to be optimal. The performances of the Karhunen-Loève and discrete cosine transforms are also found to compare closely with respect to the rate-distortion criterion.}
}

@article{shu13715,
          volume = {3},
          number = {4},
           month = {September},
          author = {Marcos A Rodrigues and Mohammed M Siddeq},
           title = {Information Systems: Secure Access and Storage in the Age of Cloud Computing},
       publisher = {Athens Institute for Education and Research},
            year = {2016},
         journal = {Athens Journal of Sciences},
           pages = {267--284},
             url = {http://shura.shu.ac.uk/13715/},
        abstract = {Given that cloud computing is a remotely accessed service, the connection between provider and customer needs to be adequately protected against all known security risks. In order to ensure this, an open and clear specification of all standards, algorithms and security protocols adopted by the cloud provider is required. In this paper, we review current issues concerned with security threats to cloud computing and present a solution based on our unique patented compression-encryption method. The method provides highly efficient data compression where a unique symmetric key is generated as part of the compression process and is dependent on the characteristics of the data. Without the key, the data cannot be decompressed. We focus on threat prevention by cryptography that, if properly implemented, is virtually impossible to break directly. Our security by design is based on two principles: first, defence in depth, where our proposed design is such that more than one subsystem needs to be violated to get both the data and their key. Second, the principle of least privilege, where the attacker may gain access to only part of a system. The paper highlights the benefits of the solution that include high compression ratios, less bandwidth requirements, faster data transmission and response times, less storage space, and less energy consumption among others.}
}
